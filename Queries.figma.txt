Queries

Q1) Select Fname,lname as FULLNAME where name starts with R and age in 35,40

  select concat(fname,lname) as "FullName",job_type,salary
  from employee1
  where fname like 'R%' and age in (35,40);

FullName             JOB_TYPE                                     SALARY
-------------------- ---------------------------------------- ----------
RitikaKhandore       Airport Administrator                         90000
RahulShirke          Airport Administrator                         90000

Q2) Count the number of passengers who will be travelling in the month of october

  SELECT COUNT(P_ID) AS PASSENGER_COUNT
  FROM TICKET1
  WHERE TO_CHAR(DATEE_OF_TRAVEL,'MON')='OCT';

PASSENGER_COUNT
---------------
              4
Q3) Count the numbers of Male and female passengers out of Total Passenger

    SELECT CLASS AS CLASS,
    COUNT(CASE WHEN SEX='M' THEN 1 END) AS MALE_COUNT,
    COUNT(CASE WHEN SEX='F' THEN  1 END) AS FEMALE_COUNT,
    COUNT (*) AS TOTAL_COUNT
    FROM PASSENGER2
    LEFT JOIN
    TICKET1 ON PASSENGER2.PASSPORT_NO=TICKET1.PASSPORT_NO
    GROUP BY CLASS;

CLASS                          MALE_COUNT FEMALE_COUNT TOTAL_COUNT
------------------------------ ---------- ------------ -----------
Economy                                 4            2           6
Business                                1            1           2
First Class                             1            1           2

Q4) Join the details of Passenger1 and passenger3

   select p1.p_id,p3.flight_code,p1.passport_no
   from passenger1 p1
   full join
   passenger3 p3 on p1.p_id=p3.p_id;

      P_ID FLIGHT_COD PASSPORT_N
---------- ---------- ----------
         1 BA1609     A12345678
         2 AI2018     B24097612
         3 AA1902     C98765413
         4 9W0743     D34710714
         5 BA0101     E01020715
         6 9W6412     F10904216
         7 9W6412     G80427417
         8 EK1002     Q80924128
         9 AA4367     M40850529
        10 EK9864     S80520520

10 rows selected.

Q5) Select ticket no and passport id of the passenger who have not cancelled the ticket and travelling from mumbai

   select ticket_number,passport_no
   from ticket1
   where date_of_cancellation is null and source='Mumbai';

TICKET_NUMBER PASSPORT_N
------------- ----------
   5.8910E+12 B24097612
   1.5777E+12 C98765413
   1.2588E+12 G80427417
   5.3891E+12 Q80924128
   2.2065E+12 M40850529

Q6) Select Airport name,State and City of the Airport which are located within India;

   select ap_name,state,cname
   from airport
   where country='India';

AP_NAME                                                                                              STATE                          CNAME
---------------------------------------------------------------------------------------------------- ------------------------------ ------------------------------
Indira Gandhi International Airport                                                                  Delhi                          Delhi
Chandigarh International Airport                                                                     Chandigarh                     Chandigarh
Go Flyin International Airport                                                                       Maharashtra                    Mumbai

Q7) Count the flights that are delayed and also which are on time

    SELECT STATUS,
    COUNT( CASE WHEN STATUS='Delayed' THEN 1 END) AS DELAYED_FLIGHT,
    COUNT( CASE WHEN STATUS='On_time' THEN 1 END) AS  ON_TIME_FLIGHT
    FROM FLIGHT
    GROUP BY STATUS;

STATUS     DELAYED_FLIGHT ON_TIME_FLIGHT
---------- -------------- --------------
Delayed                 4              0
On_time                 0              6

Q8) Select Second highest Price of Ticket where the class is Business


     SELECT *
     FROM TICKET2
     WHERE PRICE=(SELECT MAX(PRICE) FROM TICKET2
     WHERE PRICE<(SELECT MAX(PRICE) FROM TICKET2
     WHERE CLASS='Business'));

DATE_OF_B SOURCE               DESTINATION          CLASS                     PRICE
--------- -------------------- -------------------- -------------------- ----------
18-MAY-23 Colorado             Mumbai               First class              150000

Q9) Select the Third Highest price of the ticket where the Class is Economy

    SELECT *
    FROM TICKET2
    WHERE PRICE=(SELECT MAX(PRICE) FROM TICKET2
    WHERE PRICE<(SELECT MAX(PRICE) FROM TICKET2
    WHERE PRICE<(SELECT MAX(PRICE) FROM TICKET2
    WHERE CLASS='Economy')));

DATE_OF_B SOURCE               DESTINATION          CLASS                     PRICE
--------- -------------------- -------------------- -------------------- ----------
12-AUG-23 New York             Mumbai               Economy                   95000

Q10)Select the job_type,Total salary and Count the employees working according to the job

    SELECT JOB_TYPE,SUM(SALARY),COUNT(SALARY) AS EMPLOYEE_NO
    FROM EMPLOYEE1
    GROUP BY JOB_TYPE;

JOB_TYPE                                 SUM(SALARY) EMPLOYEE_NO
---------------------------------------- ----------- -----------
Traffic Monitoring                            160000           2
Engineer                                      210000           3
Administrative Support                        150000           3
Airport Administrator                         180000           2

Q11) Select passport no,ticket no and fullname of the passenger who have cancelled the ticket


    SELECT TICKET1.PASSPORT_NO,TICKET_NUMBER,CONCAT(FNAME ,LNAME) AS "FULL NAME"
    FROM TICKET1 LEFT JOIN
    PASSENGER2 ON TICKET1.PASSPORT_NO=PASSENGER2.PASSPORT_NO
    WHERE DATE_OF_CANCELLATION IS NOT NULL;

PASSPORT_N TICKET_NUMBER FULL NAME
---------- ------------- ------------------------------
F10904216     1.2557E+12 DishaPatani
S80520520     1.8076E+12 ShawnMendel

Q12)Select the passenger name who have to pay the surcharge

      SELECT CONCAT(FNAME ,LNAME) AS "FULL NAME",TICKET1.PASSPORT_NO,TICKET_NUMBER,SURCHARGE
      FROM TICKET1 LEFT JOIN
      PASSENGER2 ON TICKET1.PASSPORT_NO=PASSENGER2.PASSPORT_NO
      JOIN TICKET3 ON TICKET1.DATE_OF_CANCELLATION=TICKET3.DATE_OF_CANCELLATION
      WHERE DATE_OF_CANCELLATION IS NOT NULL;

FULL NAME                      PASSPORT_N TICKET_NUMBER  SURCHARGE
------------------------------ ---------- ------------- ----------
DishaPatani                    F10904216     1.2557E+12      75000
ShawnMendel                    S80520520     1.8076E+12      14000

Q13) PLsql block to demonstrate the salary and jobtype of the employee for the id provided by the user

  declare
  v_salary number(8);
  v_fname varchar2(20);
  v_id number(15):=&v_id;
  v_job_type varchar2(200);
  begin
  select salary,fname,job_type into v_salary,v_fname,v_job_type from employee1
  where employee_id=&v_id;
  dbms_output.put_line(v_fname ||' '||'has salary '||v_salary||' ' || 'and his job is '||v_job_type);
  end;
  /
Enter value for v_id: 4444888001
old   4: v_id number(15):=&v_id;
new   4: v_id number(15):=4444888001;
Enter value for v_id: 4444888001
old   8: where employee_id=&v_id;
new   8: where employee_id=4444888001;
Ritik has salary 50000 and his job is Administrative Support

Q14) Write e plsql block to display the airline_id and airlines_name for the airline code given  by user;

  declare
  ar_id varchar2(10);
  ar_name varchar2(30);
  ar_code varchar2(5):='&ar_code';
  begin
  select airlines_id,al_name into ar_id,ar_name
  from airlines
  where ar_code=al_code;
  dbms_output.put_line('Your airline id is ' || ar_id || ' and your Airline name is ' || ar_name);
  end;
  /
Enter value for ar_code: 001
old   4: ar_code varchar2(5):='&ar_code';
new   4: ar_code varchar2(5):='001';
Your airline id is AA and your Airline name is American airlines

PL/SQL procedure successfully completed.

Q15) Insert new row in flight table using plsql creating a procedure

  create or replace procedure add_to_flight
  (f_code in flight.flight_code%type,
  f_source in flight.source%type,
  f_dest in flight.destination%type,
  f_arrival in flight.arrival%type,
  f_dept in flight.departure%type,
  f_status in flight.status%type,
  f_dur in flight.duration%type,
  f_stops in flight.no_of_stops%type,
  f_layover in flight.layover_time%type,
  f_arid in flight.airline_id%type)
  is
  begin
   insert into flight values(f_code,f_source,f_dest,f_arrival,f_dept,f_status,f_dur,f_stops,f_layover,f_arid);
  dbms_output.put_line('Values added');
  end;
  /

Procedure created.

Q16) Update the salary of the employee with the if/else condition using plsql

  declare
  e_empid employee1.employee_id%type:=1;
  e_sal employee1.salary%type;
  e_jobtype employee1.job_type%type;
  begin
  e_empid:=&emp_id;
  select salary
  into e_sal
  from employee1
  where employee_id=e_empid;
  if (e_sal<60000) then
  update employee1
  set salary=salary+5000
  where employee_id=e_empid;
  dbms_output.put_line('Salary updated by 5000');
  else
  dbms_output.put_line('Salary not updated');
  end if;
  end;
  /
Enter value for emp_id: 123456789
old   6: e_empid:=&emp_id;
new   6: e_empid:=123456789;
Salary updated by 5000

PL/SQL procedure successfully completed.

Q17) Create a function and count the total employees


  create or replace function total_employees
  return number
  is
  total number:=0;
  begin
  select count(*) as "Total Employees"
  into total
  from employee1;
  return total;
  end;
  /

Function created.

  declare
  c number;
  begin
  c:=total_employees();
  dbms_output.put_line('Total employees are '||c);
  end;
  /
Total employees are 10

PL/SQL procedure successfully completed.

Q18) insert a new column p_id and insert the values using sequence

  create sequence auto_pid
  start with 1
  increment by 1
 minvalue 1
 maxvalue 10
 nocycle;

Sequence created.

alter table passenger2
 add (p_id int);

Table altered.

SQL> update passenger2
  2  set p_id=auto_pid.nextval;

10 rows updated.

Q19) Create a procedure with exception to display the details of the passenger by the p_id given by user

  create or replace procedure pro(pass_id in number,temp out passenger2%rowtype)
  is
  begin
  select *  into temp from passenger2
  where p_id=pass_id;
  end;
  /

Procedure created.

declare
  temp passenger2%rowtype;
  pass_id number:=&pass_id;
  begin
  pro(pass_id,temp);
  dbms_output.put_line('Passenger id is '||temp.p_id||', '||'Passenger name is '||temp.fname||' '||temp.mname||' '||temp.lname||' '||'and Passenger passport no is '||temp.Passport_no);
  exception
  when no_data_found then
  dbms_output.put_line('No such Passenger');
  when others then
  dbms_output.put_line('Error');
  end;
  /
Enter value for pass_id: 4
old   3: pass_id number:=&pass_id;
new   3: pass_id number:=4;
Passenger id is 4, Passenger name is Mohan Ramesh Darvesh and Passenger passport no is D34710714

PL/SQL procedure successfully completed.

SQL> /
Enter value for pass_id: 12
old   3: pass_id number:=&pass_id;
new   3: pass_id number:=12;
No such Passenger

PL/SQL procedure successfully completed.

Q20) Write plsql block using explicit and implicit cursor

declare
t_source ticket1.source%type;
t_dest ticket1.source%type;
t_travel ticket1.datee_of_travel%type;
cursor t_ticket1 is
select source,destination,datee_of_travel from ticket1;
begin
open t_ticket1;
loop
fetch t_ticket1 into t_source,t_dest,t_travel;
exit when t_ticket1%notfound;
dbms_output.put_line('From '||t_source||', '||'To '||t_dest||', '||'On '||t_travel);
end loop;
close t_ticket1;
end;
/

  declare
  a number;
  begin
  update ticket2
  set price=price+500;
  if sql%notfound then
  dbms_output.put_line('No workers selected');
  elsif sql%found then
  a:=sql%rowcount;
  dbms_output.put_line(a||' tickets selected');
  end if;
  end;
  /
10 tickets selected

PL/SQL procedure successfully completed.
